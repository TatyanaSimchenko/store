{"version":3,"sources":["App.js","store/cashReducer.js","store/customerReducer.js","store/store.js","index.js"],"names":["App","dispatch","useDispatch","cash","useSelector","state","customers","className","onClick","type","payload","addCash","Number","prompt","getCash","name","customer","id","Date","now","addCustomer","length","map","removeCustomer","defaultState","ADD_CASH","GET_CASH","ADD_CUSTOMER","REMOVE_CUSTOMER","rootReducer","combineReducers","action","filter","store","createStore","composeWithDevTools","ReactDOM","render","document","getElementById"],"mappings":"6IAmDeA,MAjDf,WACE,IAAMC,EAAWC,cACXC,EAAOC,aAAY,SAACC,GAAD,OAAWA,EAAMF,KAAKA,QACzCG,EAAYF,aAAY,SAACC,GAAD,OAAWA,EAAMC,UAAUA,aAsBzD,OACE,sBAAKC,UAAU,MAAf,UACE,8BAAMJ,IACN,gCACE,wBAAQK,QAAS,kBAxBP,SAACL,GACfF,EAAS,CAAEQ,KAAM,WAAYC,QAASP,IAuBXQ,CAAQC,OAAOC,YAAtC,eACA,wBAAQL,QAAS,kBArBP,SAACL,GACfF,EAAS,CAAEQ,KAAM,WAAYC,QAASP,IAoBXW,CAAQF,OAAOC,YAAtC,eACA,wBAAQL,QAAS,kBAlBH,SAACO,GACnB,IAAMC,EAAW,CACfD,OACAE,GAAIC,KAAKC,OAEXlB,EAAS,CAAEQ,KAAM,eAAgBC,QAASM,IAafI,CAAYP,WAAnC,4GAEDP,EAAUe,OAAS,EAClB,8BACGf,EAAUgB,KAAI,SAACN,GAAD,OACb,gCACGA,EAASD,KACV,sBAAMP,QAAS,kBAjBJ,SAACQ,GACtBf,EAAS,CAAEQ,KAAM,kBAAmBC,QAASM,EAASC,KAgBvBM,CAAeP,IAApC,4BAKN,gE,cC7CFQ,EAAe,CACnBrB,KAAM,GAGFsB,EAAW,WACXC,EAAW,W,QCLXF,EAAe,CACnBlB,UAAW,IAGPqB,EAAe,eACfC,EAAkB,kB,OCAlBC,EAAcC,0BAAgB,CAClC3B,KFCyB,WAAmC,IAAlCE,EAAiC,uDAAzBmB,EAAcO,EAAW,uCAC3D,OAAQA,EAAOtB,MACb,KAAKgB,EACH,OAAO,2BAAKpB,GAAZ,IAAmBF,KAAME,EAAMF,KAAO4B,EAAOrB,UAE/C,KAAKgB,EACH,OAAO,2BAAKrB,GAAZ,IAAmBF,KAAME,EAAMF,KAAO4B,EAAOrB,UAC/C,QACE,OAAOL,IERXC,UDA6B,WAAmC,IAAlCD,EAAiC,uDAAzBmB,EAAcO,EAAW,uCAC/D,OAAQA,EAAOtB,MACb,KAAKkB,EACH,OAAO,2BAAKtB,GAAZ,IAAmBC,UAAU,GAAD,mBAAMD,EAAMC,WAAZ,CAAuByB,EAAOrB,YAE5D,KAAKkB,EACH,OAAO,2BACFvB,GADL,IAEEC,UAAWD,EAAMC,UAAU0B,QACzB,SAAChB,GAAD,OAAcA,EAASC,KAAOc,EAAOrB,aAG3C,QACE,OAAOL,MCVA4B,EAAQC,sBAAYL,EAAaM,iCCJ9CC,IAASC,OACP,cAAC,IAAD,CAAUJ,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEFK,SAASC,eAAe,W","file":"static/js/main.3a8df360.chunk.js","sourcesContent":["import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nfunction App() {\n  const dispatch = useDispatch();\n  const cash = useSelector((state) => state.cash.cash);\n  const customers = useSelector((state) => state.customers.customers);\n\n  const addCash = (cash) => {\n    dispatch({ type: \"ADD_CASH\", payload: cash });\n  };\n\n  const getCash = (cash) => {\n    dispatch({ type: \"GET_CASH\", payload: cash });\n  };\n\n  const addCustomer = (name) => {\n    const customer = {\n      name,\n      id: Date.now(),\n    };\n    dispatch({ type: \"ADD_CUSTOMER\", payload: customer });\n  };\n\n  const removeCustomer = (customer) => {\n    dispatch({ type: \"REMOVE_CUSTOMER\", payload: customer.id });\n  };\n\n  return (\n    <div className=\"App\">\n      <div>{cash}</div>\n      <div>\n        <button onClick={() => addCash(Number(prompt()))}>+</button>\n        <button onClick={() => getCash(Number(prompt()))}>-</button>\n        <button onClick={() => addCustomer(prompt())}>Добавить клиента</button>\n      </div>\n      {customers.length > 0 ? (\n        <div>\n          {customers.map((customer) => (\n            <div>\n              {customer.name}\n              <span onClick={() => removeCustomer(customer)}>delete</span>\n            </div>\n          ))}\n        </div>\n      ) : (\n        <div>НЕТУ!</div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const defaultState = {\r\n  cash: 5,\r\n};\r\n\r\nconst ADD_CASH = \"ADD_CASH\";\r\nconst GET_CASH = \"GET_CASH\";\r\n\r\nexport const cashReducer = (state = defaultState, action) => {\r\n  switch (action.type) {\r\n    case ADD_CASH:\r\n      return { ...state, cash: state.cash + action.payload };\r\n\r\n    case GET_CASH:\r\n      return { ...state, cash: state.cash - action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","const defaultState = {\r\n  customers: [],\r\n};\r\n\r\nconst ADD_CUSTOMER = \"ADD_CUSTOMER\";\r\nconst REMOVE_CUSTOMER = \"REMOVE_CUSTOMER\";\r\n\r\nexport const customerReducer = (state = defaultState, action) => {\r\n  switch (action.type) {\r\n    case ADD_CUSTOMER:\r\n      return { ...state, customers: [...state.customers, action.payload] };\r\n\r\n    case REMOVE_CUSTOMER:\r\n      return {\r\n        ...state,\r\n        customers: state.customers.filter(\r\n          (customer) => customer.id !== action.payload\r\n        ),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const addCustomerAction = (payload) => ({ type: ADD_CUSTOMER, payload });\r\nexport const removeCustomerAction = (payload) => ({\r\n  type: REMOVE_CUSTOMER,\r\n  payload,\r\n});\r\n","import { createStore, combineReducers } from \"redux\";\r\nimport { cashReducer } from \"./cashReducer\";\r\nimport { customerReducer } from \"./customerReducer\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\nconst rootReducer = combineReducers({\r\n  cash: cashReducer,\r\n  customers: customerReducer,\r\n});\r\n\r\nexport const store = createStore(rootReducer, composeWithDevTools());\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./store/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}